Reverse Words in a String II My Submissions Question Solution 
Total Accepted: 3609 Total Submissions: 11472 Difficulty: Medium
Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.

The input string does not contain leading or trailing spaces and the words are always separated by a single space.

For example,
Given s = "the sky is blue",
return "blue is sky the".

Could you do it in-place without allocating extra space?

Related problem: Rotate Array












public class Solution {
    public void reverse(char[] s){
        int i = 0, j = s.length-1;
       while(i < j){
            char t = s[i];
            s[i++] = s[j];
            s[j--] = t;
        }
    }
    public void reverseWords(char[] s) {
       //reverse the string
       //then reverse every word
       reverse(s);
       for(int i = 0, j =0; i < s.length; i++){
           if(i==s.length-1 || s[i+1]==' '){
               //reverse word
               int tmp = i;
               while(j<i){
                   char t = s[i];
                   s[i] = s[j];
                   s[j] = t;
                   i--;j++;
               }
               i = tmp+1;
               j = tmp+2;
           }
       }
    }
}
